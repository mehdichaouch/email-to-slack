name: ðŸ§ª Tests

on:
  # Run on all pushes and on all pull requests.
  # Prevent the build from running when there are only irrelevant changes.
  push:
    paths-ignore:
      - '**.md'
      - '**.yml'
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

jobs:
  ### Runs PHPCompatibility over all PHP files.
  # Local equivalent: `composer phpcs:compatibility`
  phpcompatibility:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        php-versions: ['5.4', '5.6', '7.0', '7.4', '8.0']
        experimental: [false]

        include:
          - os: ubuntu-latest
            php-versions: '8.1'
            experimental: true
          - os: ubuntu-latest
            php-versions: '5.3'
            experimental: true

    name: PHP Compatibility ${{ matrix.php-versions }}
    continue-on-error: ${{ matrix.experimental }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 5.4
          ini-values: error_reporting=E_ALL, display_errors=On
          coverage: none
          tools: cs2pr

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: 'ramsey/composer-install@v1'

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Tool versions
        run: |
          which php
          php --version
          which composer
          composer --version
          which jq
          jq --version
          composer phpcs -- --config-show installed_paths

      - name: Run PHPCS for PHPCompatibility
        run: |
          composer phpcs:compatibility -- --report=emacs email-to-slack.php --runtime-set testVersion ${{ matrix.php-versions }}
